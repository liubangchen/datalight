function(filter_regex _action _regex _listname)
  # check an action
  if("${_action}" STREQUAL "INCLUDE")
    set(has_include TRUE)
  elseif("${_action}" STREQUAL "EXCLUDE")
    set(has_include FALSE)
  else()
    message(FATAL_ERROR "Incorrect value for ACTION: ${_action}")
  endif()

  set(${_listname})
  foreach(element ${ARGN})
    string(REGEX MATCH ${_regex} result ${element})
    if(result)
      if(has_include)
        list(APPEND ${_listname} ${element})
      endif()
    else()
      if(NOT has_include)
        list(APPEND ${_listname} ${element})
      endif()
    endif()
  endforeach()

  # put result in parent scope variable
  set(${_listname} ${${_listname}} PARENT_SCOPE)
endfunction()


function(auto_sources RETURN_VALUE PATTERN SOURCE_SUBDIRS)
  if("${SOURCE_SUBDIRS}" STREQUAL "RECURSE")
    set(PATH ".")
    if(${ARGC} EQUAL 4)
      list(GET ARGV 3 PATH)
    endif()
  endif()

  if("${SOURCE_SUBDIRS}" STREQUAL "RECURSE")
    unset(${RETURN_VALUE})
    file(GLOB SUBDIR_FILES "${PATH}/${PATTERN}")
    list(APPEND ${RETURN_VALUE} ${SUBDIR_FILES})

    file(GLOB subdirs RELATIVE ${PATH} ${PATH}/*)

    foreach(DIR ${subdirs})
      if(IS_DIRECTORY ${PATH}/${DIR})
        if(NOT "${DIR}" STREQUAL "CMakeFiles")
          file(GLOB_RECURSE SUBDIR_FILES "${PATH}/${DIR}/${PATTERN}")
          list(APPEND ${RETURN_VALUE} ${SUBDIR_FILES})
        endif()
      endif()
    endforeach()
  else()
    file(GLOB ${RETURN_VALUE} "${PATTERN}")

    foreach(PATH ${SOURCE_SUBDIRS})
      file(GLOB SUBDIR_FILES "${PATH}/${PATTERN}")
      list(APPEND ${RETURN_VALUE} ${SUBDIR_FILES})
    endforeach()
  endif()

  set(${RETURN_VALUE} ${${RETURN_VALUE}} PARENT_SCOPE)
endfunction(auto_sources)

function(REMOVE_MATCHES_FROM_LISTS)
  set(LISTS_TO_SEARCH)
  set(MATCHES_TO_REMOVE)
  set(MATCHES_TO_IGNORE)
  set(argumentState 0)
  foreach(arg ${ARGN})
    if("x${arg}" STREQUAL "xMATCHES")
      set(argumentState 1)
    elseif("x${arg}" STREQUAL "xIGNORE_MATCHES")
      set(argumentState 2)
    elseif(argumentState EQUAL 0)
      list(APPEND LISTS_TO_SEARCH ${arg})
    elseif(argumentState EQUAL 1)
      list(APPEND MATCHES_TO_REMOVE ${arg})
    elseif(argumentState EQUAL 2)
      list(APPEND MATCHES_TO_IGNORE ${arg})
    else()
      message(FATAL_ERROR "Unknown argument state!")
    endif()
  endforeach()

  foreach(theList ${LISTS_TO_SEARCH})
    foreach(entry ${${theList}})
      foreach(match ${MATCHES_TO_REMOVE})
        if(${entry} MATCHES ${match})
          set(SHOULD_IGNORE OFF)
          foreach(ign ${MATCHES_TO_IGNORE})
            if(${entry} MATCHES ${ign})
              set(SHOULD_IGNORE ON)
              break()
            endif()
          endforeach()

          if(NOT SHOULD_IGNORE)
            list(REMOVE_ITEM ${theList} ${entry})
          endif()
        endif()
      endforeach()
    endforeach()
    set(${theList} ${${theList}} PARENT_SCOPE)
  endforeach()
endfunction()

function(auto_source_group rootName rootDir)
  file(TO_CMAKE_PATH "${rootDir}" rootDir)
  string(LENGTH "${rootDir}" rootDirLength)
  set(sourceGroups)
  foreach(fil ${ARGN})
    file(TO_CMAKE_PATH "${fil}" filePath)
    string(FIND "${filePath}" "/" rIdx REVERSE)
    if(rIdx EQUAL -1)
      message(FATAL_ERROR "Unable to locate the final forward slash in '${filePath}'!")
    endif()
    string(SUBSTRING "${filePath}" 0 ${rIdx} filePath)

    string(LENGTH "${filePath}" filePathLength)
    string(FIND "${filePath}" "${rootDir}" rIdx)
    if(rIdx EQUAL 0)
      math(EXPR filePathLength "${filePathLength} - ${rootDirLength}")
      string(SUBSTRING "${filePath}" ${rootDirLength} ${filePathLength} fileGroup)

      string(REPLACE "/" "\\" fileGroup "${fileGroup}")
      set(fileGroup "\\${rootName}${fileGroup}")

      list(FIND sourceGroups "${fileGroup}" rIdx)
      if(rIdx EQUAL -1)
        list(APPEND sourceGroups "${fileGroup}")
        source_group("${fileGroup}" REGULAR_EXPRESSION "${filePath}/[^/.]+.(cpp|h)$")
      endif()
    endif()
  endforeach()
endfunction()

function(auto_install_files rootName rootDir)
  file(TO_CMAKE_PATH "${rootDir}" rootDir)
  string(LENGTH "${rootDir}" rootDirLength)
  set(sourceGroups)
  foreach(fil ${ARGN})
    file(TO_CMAKE_PATH "${fil}" filePath)
    string(FIND "${filePath}" "/" rIdx REVERSE)
    if(rIdx EQUAL -1)
      message(FATAL_ERROR "Unable to locate the final forward slash in '${filePath}'!")
    endif()
    string(SUBSTRING "${filePath}" 0 ${rIdx} filePath)

    string(LENGTH "${filePath}" filePathLength)
    string(FIND "${filePath}" "${rootDir}" rIdx)
    if(rIdx EQUAL 0)
      math(EXPR filePathLength "${filePathLength} - ${rootDirLength}")
      string(SUBSTRING "${filePath}" ${rootDirLength} ${filePathLength} fileGroup)
      install(
        FILES ${fil}
        DESTINATION ${INCLUDE_INSTALL_DIR}/${rootName}${fileGroup}
      )
    endif()
  endforeach()
endfunction()
